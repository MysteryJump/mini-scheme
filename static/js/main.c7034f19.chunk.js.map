{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","result","setResult","text","setText","executor","useRef","useEffect","a","imp","current","execute_lines","f","className","value","onChange","e","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA4CeA,MA1Cf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAIPC,EAAWC,mBASjB,OARAC,qBAAU,YACD,uCAAG,4BAAAC,EAAA,sEACU,6BADV,OACFC,EADE,OAERJ,EAASK,QAAUD,EAAIE,cAFf,2CAAH,qDAIPC,KACC,IAGD,qBAAKC,UAAU,gCAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,UAAd,2CACA,sBAAKA,UAAU,mBAAf,UACE,0BACEA,UAAU,iBACVC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOH,UAEpC,0BAAUD,UAAU,iBAAiBC,MAAOb,OAE9C,qBAAKY,UAAU,MAAf,SACE,wBACEA,UAAU,8EACVK,QAAS,WACHb,EAASK,SACXR,EAAUG,EAASK,QAAQP,KAJjC,6BCdKgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7034f19.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const executor = useRef<(lines: string) => string>();\n  useEffect(() => {\n    const f = async () => {\n      const imp = await import(\"mini-scheme-wasm\");\n      executor.current = imp.execute_lines;\n    };\n    f();\n  }, []);\n\n  return (\n    <div className=\"w-screen h-screen bg-gray-200\">\n      <div className=\"flex flex-col p-4 justify-start\">\n        <h1 className=\"text-xl\">Miniwascheme - Web Playground</h1>\n        <div className=\"flex w-full pt-4\">\n          <textarea\n            className=\"flex-grow mr-2\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <textarea className=\"flex-grow ml-2\" value={result} />\n        </div>\n        <div className=\"p-2\">\n          <button\n            className=\"p-1.5 rounded bg-red-500 hover:bg-red-700 focus:ring-0 focus-visible:ring-2\"\n            onClick={() => {\n              if (executor.current) {\n                setResult(executor.current(text));\n              }\n            }}\n          >\n            Execute\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"focus-visible/dist/focus-visible\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}